<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.ModuleMapper">

    <!-- 查询所有模块 -->
    <select id="selectAll" resultType="com.example.entity.Module">
        SELECT
            m.id,
            m.project_id    AS projectId,
            m.name,
            m.description,
            m.created_at    AS createdAt,
            p.name          AS projectName
        FROM module m
                 LEFT JOIN project p ON m.project_id = p.id
        ORDER BY m.id DESC
    </select>

    <!-- 按 name 模糊查询 -->
    <select id="selectByName" parameterType="string" resultType="com.example.entity.Module">
        SELECT
            m.id,
            m.project_id    AS projectId,
            m.name,
            m.description,
            m.created_at    AS createdAt,
            p.name          AS projectName
        FROM module m
                 LEFT JOIN project p ON m.project_id = p.id
        WHERE m.name LIKE CONCAT('%', #{name}, '%')
        ORDER BY m.id DESC
    </select>

    <!-- 按 projectId 查询（可选按 name 过滤） -->
    <select id="selectByProjectId" parameterType="map" resultType="com.example.entity.Module">
        SELECT
        m.id,
        m.project_id    AS projectId,
        m.name,
        m.description,
        m.created_at    AS createdAt,
        p.name          AS projectName
        FROM module m
        LEFT JOIN project p ON m.project_id = p.id
        WHERE m.project_id = #{projectId}
        <if test="name != null and name != ''">
            AND m.name LIKE CONCAT('%', #{name}, '%')
        </if>
        ORDER BY m.id DESC
    </select>

    <!-- 根据 id 查询单个模块 -->
    <select id="selectById" parameterType="java.lang.Integer" resultType="com.example.entity.Module">
        SELECT
            m.id,
            m.project_id    AS projectId,
            m.name,
            m.description,
            m.created_at    AS createdAt,
            p.name          AS projectName
        FROM module m
                 LEFT JOIN project p ON m.project_id = p.id
        WHERE m.id = #{id}
    </select>

    <!-- 插入模块（返回自增 id） -->
    <insert id="insert" parameterType="com.example.entity.Module" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO module (project_id, name, description, created_at)
        VALUES (#{projectId}, #{name}, #{description}, #{createdAt})
    </insert>

    <!-- 更新模块 -->
    <update id="update" parameterType="com.example.entity.Module">
        UPDATE module
        SET
            project_id = #{projectId},
            name = #{name},
            description = #{description}
        WHERE id = #{id}
    </update>

    <!-- 删除模块 -->
    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM module WHERE id = #{id}
    </delete>

</mapper>
